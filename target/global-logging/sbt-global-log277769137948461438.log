[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.9.1 (Oracle Corporation Java 1.8.0_202)
[debug] Load.defaultLoad until apply took 72.9206ms
[debug]           Load.loadUnit: plugins took 99.9943ms
[debug]           Load.loadUnit: defsScala took 0.3261ms
[debug] [Loading] Scanning directory C:\Users\WimbeeAdmin\IdeaProjects\spark\project
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\WimbeeAdmin\IdeaProjects\spark\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 10.7387 ms
[debug]               Load.resolveProject(spark-build) took 29.0777ms
[debug]             Load.loadTransitive: finalizeProject(Project(id spark-build, base: C:\Users\WimbeeAdmin\IdeaProjects\spark\project, plugins: List(<none>))) took 56.4096ms
[debug] [Loading] Done in C:\Users\WimbeeAdmin\IdeaProjects\spark\project, returning: (spark-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 71.9212ms
[debug]           Load.loadUnit: cleanEvalClasses took 0.1607ms
[debug]         Load.loadUnit(file:/C:/Users/WimbeeAdmin/IdeaProjects/spark/project/, ...) took 177.0149ms
[debug]       Load.apply: load took 365.8598ms
[debug]       Load.apply: resolveProjects took 3.7948ms
[debug]       Load.apply: finalTransforms took 56.6097ms
[debug]       Load.apply: config.delegates took 6.8973ms
[debug]       Load.apply: Def.make(settings)... took 285.8562ms
[debug]       Load.apply: structureIndex took 85.3165ms
[debug]       Load.apply: mkStreams took 1.9116ms
[info] loading project definition from C:\Users\WimbeeAdmin\IdeaProjects\spark\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 1441.686ms
[debug]     Load.loadUnit: defsScala took 0.0036ms
[debug] [Loading] Scanning directory C:\Users\WimbeeAdmin\IdeaProjects\spark
[debug]       Load.loadUnit: mkEval took 5.8838ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 2.4741 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 3.5657ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\WimbeeAdmin\IdeaProjects\spark, plugins: List(<none>))) took 7.4406ms
[debug] [Loading] Done in C:\Users\WimbeeAdmin\IdeaProjects\spark, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 240.7276ms
[debug]     Load.loadUnit: cleanEvalClasses took 7.9872ms
[debug]   Load.loadUnit(file:/C:/Users/WimbeeAdmin/IdeaProjects/spark/, ...) took 1691.6447ms
[debug] Load.apply: load took 1706.651ms
[debug] Load.apply: resolveProjects took 0.1777ms
[debug] Load.apply: finalTransforms took 12.7302ms
[debug] Load.apply: config.delegates took 0.4349ms
[debug] Load.apply: Def.make(settings)... took 76.0623ms
[debug] Load.apply: structureIndex took 32.5384ms
[debug] Load.apply: mkStreams took 0.0026ms
[info] set current project to spark (in build file:/C:/Users/WimbeeAdmin/IdeaProjects/spark/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(shell, None, None)
[info] sbt server started at local:sbt-server-e739e7f47e9111984b65
[debug] Writing bsp connection file
[info] started sbt server

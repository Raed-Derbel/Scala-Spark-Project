[debug] > Exec(early(addDefaultCommands), None, None)
[debug] > Exec(addDefaultCommands, None, None)
[debug] > Exec(early(initialize), None, None)
[debug] > Exec(initialize, None, None)
[debug] > Exec(boot, None, None)
[debug] > Exec(writeSbtVersion, None, None)
[debug] > Exec(reload, None, None)
[debug] > Exec(sbtStashOnFailure, None, None)
[debug] > Exec(onFailure loadFailed, None, None)
[debug] > Exec(loadp, None, None)
[info] welcome to sbt 1.9.1 (Oracle Corporation Java 1.8.0_202)
[debug] Load.defaultLoad until apply took 246.1788ms
[debug]           Load.loadUnit: plugins took 414.4589ms
[debug]           Load.loadUnit: defsScala took 3.6739ms
[debug] [Loading] Scanning directory C:\Users\WimbeeAdmin\IdeaProjects\spark\project
[debug] [Loading] Found non-root projects 
[debug] [Loading] Done in C:\Users\WimbeeAdmin\IdeaProjects\spark\project, returning: ()
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 72.2579 ms
[debug]               Load.resolveProject(spark-build) took 138.1641ms
[debug]             Load.loadTransitive: finalizeProject(Project(id spark-build, base: C:\Users\WimbeeAdmin\IdeaProjects\spark\project, plugins: List(<none>))) took 269.468ms
[debug] [Loading] Done in C:\Users\WimbeeAdmin\IdeaProjects\spark\project, returning: (spark-build)
[debug]           Load.loadUnit: loadedProjectsRaw took 346.3099ms
[debug]           Load.loadUnit: cleanEvalClasses took 0.9505ms
[debug]         Load.loadUnit(file:/C:/Users/WimbeeAdmin/IdeaProjects/spark/project/, ...) took 796.6402ms
[debug]       Load.apply: load took 1556.7883ms
[debug]       Load.apply: resolveProjects took 15.4581ms
[debug]       Load.apply: finalTransforms took 160.9863ms
[debug]       Load.apply: config.delegates took 49.6815ms
[debug]       Load.apply: Def.make(settings)... took 978.1341ms
[debug]       Load.apply: structureIndex took 189.2852ms
[debug]       Load.apply: mkStreams took 2.5066ms
[info] loading project definition from C:\Users\WimbeeAdmin\IdeaProjects\spark\project
[debug] Running task... Cancel: Signal, check cycles: false, forcegc: true
[debug]     Load.loadUnit: plugins took 3983.1862ms
[debug]     Load.loadUnit: defsScala took 0.0028ms
[debug] [Loading] Scanning directory C:\Users\WimbeeAdmin\IdeaProjects\spark
[debug]       Load.loadUnit: mkEval took 8.6525ms
[debug] [Loading] Found root project root w/ remaining 
[debug] deducing auto plugins based on known facts Set(Atom(sbt.plugins.CorePlugin)) and clauses Clauses(Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.ScriptedPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.SbtPlugin),Set(Atom(sbt.ScriptedPlugin)))
[debug] Clause(Atom(sbt.plugins.SemanticdbPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JUnitXmlReportPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.MiniDependencyTreePlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.IvyPlugin)))
[debug] Clause(Atom(sbt.plugins.IvyPlugin),Set(Atom(sbt.plugins.JvmPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.SemanticdbPlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.JUnitXmlReportPlugin)))
[debug] Clause(Atom(sbt.plugins.CorePlugin),Set(Atom(sbt.plugins.Giter8TemplatePlugin)))
[debug] Clause(Atom(sbt.plugins.JvmPlugin),Set(Atom(sbt.plugins.MiniDependencyTreePlugin))))
[debug]   :: deduced result: Matched(sbt.plugins.CorePlugin,sbt.plugins.Giter8TemplatePlugin,sbt.plugins.IvyPlugin,sbt.plugins.JvmPlugin,sbt.plugins.MiniDependencyTreePlugin,sbt.plugins.JUnitXmlReportPlugin,sbt.plugins.SemanticdbPlugin)
[debug] Plugins.deducer#function took 2.8496 ms
[info] loading settings for project root from build.sbt ...
[debug]         Load.resolveProject(root) took 3.3739ms
[debug]       Load.loadTransitive: finalizeProject(Project(id root, base: C:\Users\WimbeeAdmin\IdeaProjects\spark, plugins: List(<none>))) took 7.4336ms
[debug] [Loading] Done in C:\Users\WimbeeAdmin\IdeaProjects\spark, returning: (root)
[debug]     Load.loadUnit: loadedProjectsRaw took 291.7848ms
[debug]     Load.loadUnit: cleanEvalClasses took 8.7169ms
[debug]   Load.loadUnit(file:/C:/Users/WimbeeAdmin/IdeaProjects/spark/, ...) took 4285.617ms
[debug] Load.apply: load took 4340.3616ms
[debug] Load.apply: resolveProjects took 0.1618ms
[debug] Load.apply: finalTransforms took 12.9777ms
[debug] Load.apply: config.delegates took 0.4761ms
[debug] Load.apply: Def.make(settings)... took 77.234ms
[debug] Load.apply: structureIndex took 30.0831ms
[debug] Load.apply: mkStreams took 0.0031ms
[info] set current project to spark (in build file:/C:/Users/WimbeeAdmin/IdeaProjects/spark/)
[debug] > Exec(sbtPopOnFailure, None, None)
[debug] > Exec(resumeFromFailure, None, None)
[debug] > Exec(notifyUsersAboutShell, None, None)
[debug] > Exec(iflast shell, None, None)
[debug] > Exec(shell, None, None)
[info] sbt server started at local:sbt-server-e739e7f47e9111984b65
[debug] Writing bsp connection file
[info] started sbt server
